# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-04-06 15:42
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Autores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(blank=True, max_length=100, null=True)),
                ('twitter', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'autores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Escalafh',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inf', models.IntegerField(blank=True, null=True)),
                ('sup', models.IntegerField(blank=True, null=True)),
                ('resultado', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'escalafh',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Escalagu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inf', models.FloatField(blank=True, null=True)),
                ('sup', models.FloatField(blank=True, null=True)),
                ('resultado', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'escalagu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Escalain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inf', models.IntegerField(blank=True, null=True)),
                ('sup', models.IntegerField(blank=True, null=True)),
                ('resultado', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'escalain',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Escalamu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inf', models.IntegerField(blank=True, null=True)),
                ('sup', models.IntegerField(blank=True, null=True)),
                ('resultado', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'escalamu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Escalasp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inf', models.IntegerField(blank=True, null=True)),
                ('sup', models.IntegerField(blank=True, null=True)),
                ('resultado', models.CharField(blank=True, max_length=50, null=True)),
                ('tipopublicacion', models.CharField(blank=True, max_length=255, null=True)),
                ('estudios', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'escalasp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Indices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombres', models.TextField()),
            ],
            options={
                'db_table': 'indices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ocasiones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ocasion', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'ocasiones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Textos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.TextField()),
                ('fecha', models.DateField(blank=True, null=True)),
                ('titulo', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'textos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cr',
            fields=[
                ('idtexto', models.OneToOneField(db_column='idtexto', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='i4speech_app.Textos')),
                ('resultado', models.FloatField()),
            ],
            options={
                'db_table': 'cr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fh',
            fields=[
                ('idtexto', models.OneToOneField(db_column='idtexto', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='i4speech_app.Textos')),
                ('resultado', models.FloatField()),
            ],
            options={
                'db_table': 'fh',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gu',
            fields=[
                ('idtexto', models.OneToOneField(db_column='idtexto', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='i4speech_app.Textos')),
                ('resultado', models.FloatField()),
            ],
            options={
                'db_table': 'gu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mu',
            fields=[
                ('idtexto', models.OneToOneField(db_column='idtexto', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='i4speech_app.Textos')),
                ('resultado', models.FloatField()),
            ],
            options={
                'db_table': 'mu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sp',
            fields=[
                ('idtexto', models.OneToOneField(db_column='idtexto', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='i4speech_app.Textos')),
                ('resultado', models.FloatField()),
            ],
            options={
                'db_table': 'sp',
                'managed': False,
            },
        ),
    ]
